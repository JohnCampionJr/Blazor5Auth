@using Microsoft.AspNetCore.Components.Authorization

@inject NavigationManager Navigation

<AuthorizeView Policy="@Policies.IsPrimaryUser">
    <Authorized>
        <div>
            <a href="Account/Manage">Hello, @context.User.Identity.Name!</a>
            <button class="px-4 focus:outline-none" @onclick="BeginSignOut">Primary Log out</button>
        </div>
    </Authorized>
</AuthorizeView>

<AuthorizeView Policy="@Policies.IsSecondaryUser">
    <Authorized>
        <div>
            <a href="Account/Manage">Hello, @context.User.Identity.Name!</a>
            <button class="px-4 focus:outline-none" @onclick="BeginSecondarySignOut">Secondary Log out</button>
        </div>
    </Authorized>
</AuthorizeView>
<AuthorizeView>
    <NotAuthorized>
        <div>
            <a href="Account/Register">Register</a>
            <button class="px-4 focus:outline-none" @onclick="BeginLogIn">Log in</button>

            <a href="Secondary/Register">Secondary Register</a>
            <button class="px-4 focus:outline-none" @onclick="BeginSecondaryLogIn">Secondary Log in</button>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code{
    private void BeginLogIn(MouseEventArgs args)
    {
        Navigation.NavigateWithNewReturnUrl("/account/login");
    }

    private void BeginSignOut(MouseEventArgs args)
    {
        Navigation.NavigateWithNewReturnUrl("/account/logout");
    }

    private void BeginSecondaryLogIn(MouseEventArgs args)
    {
        Navigation.NavigateWithNewReturnUrl("/secondary/login");
    }

    private void BeginSecondarySignOut(MouseEventArgs args)
    {
        Navigation.NavigateWithNewReturnUrl("/secondary/logout");
    }
}
