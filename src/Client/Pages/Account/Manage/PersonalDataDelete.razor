@page "/account/manage/PersonalData/Delete"
@attribute [Authorize]
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject HttpClient Http

<TwHeader2>Delete Personal Data</TwHeader2>

<TwAlertError>
    <strong>Deleting this data will permanently remove your account, and this cannot be recovered.</strong>
</TwAlertError>

<TwSubCard>
    <EditForm Model="Model" OnValidSubmit="SubmitDeleteData">
        <FluentValidationValidator />
        <ServerValidator @ref="_serverValidator" />
        <TwEditContextClasses />

        <TwInputText @bind-Value="@Model.Password"
                      ValidationFor="@(() => Model.Password)"
                      Label="Password"
                      type="password" />
        
        <button class="px-3 py-2 mt-4 text-white bg-red-600 rounded-md" type="submit">Delete data and close my account</button>
    </EditForm>
</TwSubCard>

@code
{
    private Features.Account.Manage.PersonalData.Command Model = new();
    private string Success { get; set; }
    private string Error { get; set; }
    private ServerValidator _serverValidator;

    private async Task SubmitDeleteData()
    {
        Error = "";
        Success = "";
        var response = await Http.PostAsJsonAsync("api/account/manage/deletepersonaldata", Model);
        var result = await response.Content.ReadFromJsonAsync<Features.Account.Manage.PersonalData.Result>();

        if (result.IsSuccessful)
        {
            await AuthService.Logout();
            NavigationManager.NavigateTo("/");
        }
        else
        {
            _serverValidator.DisplayErrors(result.Errors);
            Error = result.Message;
        }
    }
}
