@page "/account/manage/twofactorauthentication"
@attribute [Authorize]
@using Features.Account.Manage
@using Features.Base
@inject HttpClient Http

<h4>Two Factor Authentication</h4>

@if (!string.IsNullOrEmpty(Success))
{
    <div class="alert alert-success alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        @Success
    </div>
}

@if (Model != null)
{
    @if (Model.IsMfaEnabled)
    {
        if (Model.RecoveryCodesLeft == 0)
        {
            <div class="alert alert-danger">
                <strong>You have no recovery codes left.</strong>
                <p>You must <a href="/Account/Manage/GenerateRecoveryCodes">generate a new set of recovery codes</a> before you can log in with a recovery code.</p>
            </div>
        }
        else if (Model.RecoveryCodesLeft == 1)
        {
            <div class="alert alert-danger">
                <strong>You have 1 recovery code left.</strong>
                <p>You can <a href="/Account/Manage/GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
            </div>
        }
        else if (Model.RecoveryCodesLeft <= 3)
        {
            <div class="alert alert-warning">
                <strong>You have @Model.RecoveryCodesLeft recovery codes left.</strong>
                <p>You should <a href="/Account/Manage/GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
            </div>
        }

        if (Model.IsMachineRemembered)
        {
            <button style="margin-right: 4px;" @onclick="ForgetBrowser" type="submit" class="btn btn-primary">Forget this browser</button>
        }
        <a href="/Account/Manage/DisableMfa" class="btn btn-primary">Disable 2FA</a>
        <a href="/Account/Manage/GenerateRecoveryCodes" class="btn btn-primary">Reset recovery codes</a>
    }

    <h5>Authenticator app</h5>
    @if (!Model.HasAuthenticator)
    {
        <a id="enable-authenticator" href="/Account/Manage/EnableAuthenticator" class="btn btn-primary">Add authenticator app</a>
    }
    else
    {
        <a id="enable-authenticator" href="/Account/Manage/EnableAuthenticator" class="btn btn-primary">Setup authenticator app</a>
        <a id="reset-authenticator" href="/Account/Manage/ResetAuthenticator" class="btn btn-primary">Reset authenticator app</a>
    }
}

@code {
    private MfaInfo.Result Model;
    private string Success { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = await Http.GetFromJsonAsync<MfaInfo.Result>("api/account/manage/mfainfo");
    }

    private async Task ForgetBrowser()
    {
        var response = await Http.PostAsJsonAsync("api/account/manage/mfaforgetbrowser", new {});
        var result = await response.Content.ReadFromJsonAsync<BaseResult>();

        if (result.IsSuccessful)
        {
            Success = result.Message;
        }
    }

}