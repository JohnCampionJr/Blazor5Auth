@page "/account/manage/"
@inject HttpClient Http
@attribute [Authorize]

<h4>Profile</h4>
@if (!string.IsNullOrEmpty(Success))
{
    <div class="alert alert-success alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        @Success
    </div>
}
<div class="row">
    <div class="col-md-6">
        <EditForm Model="Model" OnValidSubmit="HandleProfile">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">User Name</label>
                <InputText Id="email" class="form-control" @bind-Value="Model.Email" disabled />
                <ValidationMessage For="@(() => Model.Email)" />
            </div>
            <div class="form-group">
                <label for="phonenumber">Phone Number</label>
                <InputText Id="phonenumber" class="form-control" @bind-Value="Model.PhoneNumber" />
                <ValidationMessage For="@(() => Model.PhoneNumber)" />
            </div>
            <button type="submit" class="btn btn-primary">Save</button>
        </EditForm>
    </div>
</div>

@code
{
    private UserProfileModel Model = new UserProfileModel();
    private string Success { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = await Http.GetFromJsonAsync<UserProfileModel>("api/account/userprofile");
    }

    private async Task HandleProfile()
    {
        var response = await Http.PostAsJsonAsync("api/account/userprofile", Model);
        var result = await response.Content.ReadFromJsonAsync<VerifyMfaResult>();

        if (result.Successful)
        {
            Success = result.Status;
        }
    }
    
}