@page "/account/manage/GenerateRecoveryCodes"
@attribute [Authorize]
@using Features.Account.Manage
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject HttpClient Http

<TwHeader2>Generate Recovery Codes</TwHeader2>

<TwAlertError>
    <p>
        <svg class="w-5 h-5 text-red-600"
             xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
        </svg>
        <strong>Put these codes in a safe place.</strong>
    </p>
    <p>
        If you lose your device and don't have the recovery codes you will lose access to your account.
    </p>
@if (RecoveryCodes == null)
{
    <p>
        Generating new recovery codes does not change the keys used in authenticator apps. If you wish to change the key
        used in an authenticator app you should <a href="./ResetAuthenticator">reset your authenticator keys.</a>
    </p>
}
</TwAlertError>
@if (RecoveryCodes == null)
{
    <button @onclick="HandleGenerate" class="px-3 py-2 mt-4 text-white bg-red-600 rounded-md" type="submit">Generate Recovery Codes</button>
}
@if (RecoveryCodes != null)
{
    <TwSubCard>
        @for (var row = 0; row < RecoveryCodes.Length; row += 2)
        {
            <code>@RecoveryCodes[row]</code><text>&nbsp;</text><code>@RecoveryCodes[row + 1]</code><br />
        }
    </TwSubCard>
}

@code
{
    private string[] RecoveryCodes = null;

    private async Task HandleGenerate()
    {
        var response = await Http.PostAsJsonAsync("api/account/manage/mfageneratecodes", new { });
        var result = await response.Content.ReadFromJsonAsync<MfaGenerateCodes.Result>();

        if (!result.IsSuccessful)
        {
            NavigationManager.NavigateTo("/Account/Manage/TwoFactorAuthentication");
        }
        RecoveryCodes = result.RecoveryCodes;
    }
}
