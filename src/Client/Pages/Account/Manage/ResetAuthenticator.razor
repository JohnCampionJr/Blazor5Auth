@page "/account/manage/resetauthenticator"
@attribute [Authorize]
@using Features.Base
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject HttpClient Http

<TwHeader2>Reset authenticator key</TwHeader2>

<TwAlertError>
    <p>
        <svg class="w-5 h-5 text-red-600"
             xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
        </svg>
        <strong>If you reset your authenticator key your authenticator app will not work until you reconfigure it.</strong>
    </p>
    <p>
        This process disables 2FA until you verify your authenticator app.
        If you do not complete your authenticator app configuration you may lose access to your account.
    </p>
</TwAlertError>
<button @onclick="HandleReset" class="px-3 py-2 mt-4 text-white bg-red-600 rounded-md" type="submit">Reset authenticator key</button>

@code
{
    private async Task HandleReset()
    {
        var response = await Http.PostAsJsonAsync("api/account/manage/mfaresetkey", new { });
        var result = await response.Content.ReadFromJsonAsync<BaseResult>();

        if (result.IsSuccessful)
        {
            NavigationManager.NavigateTo("/Account/Manage/TwoFactorAuthentication");
        }
    }
}
