@page "/account/manage/enableauthenticator"
@attribute [Authorize]
@using Features.Account.Manage
@using Features.Base
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject HttpClient Http

<TwHeader2>Configure authenticator app</TwHeader2>

@if (!string.IsNullOrEmpty(Error))
{
    <TwAlertError>
        @Error
    </TwAlertError>
}

@if (!string.IsNullOrEmpty(Success))
{
    <TwAlertSuccess>
        @Success
    </TwAlertSuccess>
}

@if (Model != null)
{
    <div>
        <p>To use an authenticator app go through the following steps:</p>
        <ol class="list">
            <li>
                <p>
                    Download a two-factor authenticator app like Microsoft Authenticator for
                    <a href="https://go.microsoft.com/fwlink/?Linkid=825072">Android</a> and
                    <a href="https://go.microsoft.com/fwlink/?Linkid=825073">iOS</a> or
                    Google Authenticator for
                    <a href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&amp;hl=en">Android</a> and
                    <a href="https://itunes.apple.com/us/app/google-authenticator/id388497605?mt=8">iOS</a>.
                </p>
            </li>
            <li>
                <p>Scan the QR Code or enter this key <kbd>@Model.SharedKey</kbd> into your two factor authenticator app. Spaces and casing do not matter.</p>
                <img src="@($"data:image/png;base64,{Model.QrCodeBase64}")" />
            </li>
            <li>
                <p>
                    Once you have scanned the QR code or input the key above, your two factor authentication app will provide you
                    with a unique code. Enter the code in the confirmation box below.
                </p>
                <div class="row">
                    <div class="col-md-6">
                        <EditForm Model="VerifyModel" OnValidSubmit="HandleVerify">
                            <FluentValidationValidator />
                            <ServerValidator @ref="serverValidator" />
                            <ValidationSummary />
                            <div class="form-group">
                                <label for="verify">Verification Code</label>
                                <InputText Id="verify" class="form-control" @bind-Value="VerifyModel.VerificationCode" />
                                <ValidationMessage For="@(() => VerifyModel.VerificationCode)" />
                            </div>
                            <button type="submit" class="btn btn-primary">Verify</button>
                        </EditForm>
                    </div>
                </div>
            </li>
        </ol>
    </div>
}

@code
{
    private ServerValidator serverValidator;
    private MfaEnable.Command VerifyModel = new();
    private MfaEnable.QueryResult Model;
    private string Error = "";
    private string Success = "";

    protected override async Task OnInitializedAsync()
    {
        Model = await Http.GetFromJsonAsync<MfaEnable.QueryResult>("api/account/manage/mfaenable");

    }

    private async Task HandleVerify()
    {
        var response = await Http.PostAsJsonAsync("api/account/manage/mfaenable", VerifyModel);
        var result = await response.Content.ReadFromJsonAsync<BaseResult>();

        if (result.IsSuccessful)
        {
            Success = result.Message;
        }
        else
        {
            serverValidator.DisplayErrors(result.Errors);
        }
    }
}
