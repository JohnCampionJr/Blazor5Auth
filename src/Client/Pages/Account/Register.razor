@page "/account/register"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h1>Register</h1>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please enter your details</h5>
        <EditForm Model="RegisterModel" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <ServerValidator @ref="serverValidator"/>
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Email address</label>
                <InputText Id="email" class="form-control" @bind-Value="RegisterModel.Email" />
                <ValidationMessage For="@(() => RegisterModel.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="RegisterModel.Password" />
                <ValidationMessage For="@(() => RegisterModel.Password)" />
            </div>
            <div class="form-group">
                <label for="confirmpassword">Confirm Password</label>
                <InputText Id="confirmpassword" type="password" class="form-control" @bind-Value="RegisterModel.ConfirmPassword" />
                <ValidationMessage For="@(() => RegisterModel.ConfirmPassword)" />
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

@code {

    private Features.Account.Register.Command RegisterModel = new ();
    private ServerValidator serverValidator;

    private async Task HandleRegistration()
    {
        var result = await AuthService.Register(RegisterModel);

        if (result.IsSuccessful)
        {
            NavigationManager.NavigateTo("/account/login");
        }
        else
        {
            serverValidator.DisplayErrors(result.Errors);
        }
    }

}
