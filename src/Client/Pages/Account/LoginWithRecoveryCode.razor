@page "/account/loginwithrecoverycode"
@using Features.Account
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h1>Recovery code verification</h1>

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@Error</p>
    </div>
}

<p>
    You have requested to log in with a recovery code. This login will not be remembered until you provide
    an authenticator app code at log in or disable 2FA and log in again.
</p>

<div class="card">
    <div class="card-body">
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="email">Recovery Code</label>
                <InputText Id="email" Class="form-control" @bind-Value="loginModel.RecoveryCode" />
                <ValidationMessage For="@(() => loginModel.RecoveryCode)" />
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

@code {

    private LoginRecoveryCode.Command loginModel = new();
    private bool ShowErrors;
    private string Error = "";

    protected override async Task OnInitializedAsync()
    {
        var result = await AuthService.CheckMfa();
        if (!result.IsSuccessful) NavigationManager.NavigateTo("/Account/Login");
    }

    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.LoginRecoveryCode(loginModel);

        if (result.IsSuccessful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Message;
            ShowErrors = true;
        }
    }

}